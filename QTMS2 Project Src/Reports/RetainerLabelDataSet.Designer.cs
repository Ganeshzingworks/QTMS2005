//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QTMS.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("RetainerLabelDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RetainerLabelDataSet : global::System.Data.DataSet {
        
        private dtDataTable tabledt;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RetainerLabelDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RetainerLabelDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dt"] != null)) {
                    base.Tables.Add(new dtDataTable(ds.Tables["dt"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtDataTable dt {
            get {
                return this.tabledt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            RetainerLabelDataSet cln = ((RetainerLabelDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dt"] != null)) {
                    base.Tables.Add(new dtDataTable(ds.Tables["dt"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledt = ((dtDataTable)(base.Tables["dt"]));
            if ((initTable == true)) {
                if ((this.tabledt != null)) {
                    this.tabledt.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RetainerLabelDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RetainerLabelDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledt = new dtDataTable();
            base.Tables.Add(this.tabledt);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            RetainerLabelDataSet ds = new RetainerLabelDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtRowChangeEventHandler(object sender, dtRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnRMCode;
            
            private global::System.Data.DataColumn columnPlantLotNo;
            
            private global::System.Data.DataColumn columnReceiptDate;
            
            private global::System.Data.DataColumn columnDisposalDate;
            
            private global::System.Data.DataColumn columnSafetyImage1;
            
            private global::System.Data.DataColumn columnSafetyImage2;
            
            private global::System.Data.DataColumn columnSafetyImage3;
            
            private global::System.Data.DataColumn columnSafetyImage4;
            
            private global::System.Data.DataColumn columnSafetyImage5;
            
            private global::System.Data.DataColumn columnSafetyImage6;
            
            private global::System.Data.DataColumn columnSafetyImage7;
            
            private global::System.Data.DataColumn columnSafetyImage8;
            
            private global::System.Data.DataColumn columnSafetyImage9;
            
            private global::System.Data.DataColumn columnSafetyImage10;
            
            private global::System.Data.DataColumn columnAccessImage1;
            
            private global::System.Data.DataColumn columnAccessImage2;
            
            private global::System.Data.DataColumn columnAccessImage3;
            
            private global::System.Data.DataColumn columnAccessImage4;
            
            private global::System.Data.DataColumn columnAccessImage5;
            
            private global::System.Data.DataColumn columnAccessImage6;
            
            private global::System.Data.DataColumn columnAccessImage7;
            
            private global::System.Data.DataColumn columnAccessImage8;
            
            private global::System.Data.DataColumn columnAccessImage9;
            
            private global::System.Data.DataColumn columnAccessImage10;
            
            private global::System.Data.DataColumn columnColumn1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtDataTable() {
                this.TableName = "dt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RMCodeColumn {
                get {
                    return this.columnRMCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PlantLotNoColumn {
                get {
                    return this.columnPlantLotNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceiptDateColumn {
                get {
                    return this.columnReceiptDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DisposalDateColumn {
                get {
                    return this.columnDisposalDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyImage1Column {
                get {
                    return this.columnSafetyImage1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyImage2Column {
                get {
                    return this.columnSafetyImage2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyImage3Column {
                get {
                    return this.columnSafetyImage3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyImage4Column {
                get {
                    return this.columnSafetyImage4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyImage5Column {
                get {
                    return this.columnSafetyImage5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyImage6Column {
                get {
                    return this.columnSafetyImage6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyImage7Column {
                get {
                    return this.columnSafetyImage7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyImage8Column {
                get {
                    return this.columnSafetyImage8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyImage9Column {
                get {
                    return this.columnSafetyImage9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SafetyImage10Column {
                get {
                    return this.columnSafetyImage10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessImage1Column {
                get {
                    return this.columnAccessImage1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessImage2Column {
                get {
                    return this.columnAccessImage2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessImage3Column {
                get {
                    return this.columnAccessImage3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessImage4Column {
                get {
                    return this.columnAccessImage4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessImage5Column {
                get {
                    return this.columnAccessImage5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessImage6Column {
                get {
                    return this.columnAccessImage6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessImage7Column {
                get {
                    return this.columnAccessImage7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessImage8Column {
                get {
                    return this.columnAccessImage8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessImage9Column {
                get {
                    return this.columnAccessImage9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AccessImage10Column {
                get {
                    return this.columnAccessImage10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Column1Column {
                get {
                    return this.columnColumn1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRow this[int index] {
                get {
                    return ((dtRow)(this.Rows[index]));
                }
            }
            
            public event dtRowChangeEventHandler dtRowChanging;
            
            public event dtRowChangeEventHandler dtRowChanged;
            
            public event dtRowChangeEventHandler dtRowDeleting;
            
            public event dtRowChangeEventHandler dtRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtRow(dtRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRow AdddtRow(
                        string RMCode, 
                        string PlantLotNo, 
                        string ReceiptDate, 
                        string DisposalDate, 
                        byte[] SafetyImage1, 
                        byte[] SafetyImage2, 
                        byte[] SafetyImage3, 
                        byte[] SafetyImage4, 
                        byte[] SafetyImage5, 
                        byte[] SafetyImage6, 
                        byte[] SafetyImage7, 
                        byte[] SafetyImage8, 
                        byte[] SafetyImage9, 
                        byte[] SafetyImage10, 
                        byte[] AccessImage1, 
                        byte[] AccessImage2, 
                        byte[] AccessImage3, 
                        byte[] AccessImage4, 
                        byte[] AccessImage5, 
                        byte[] AccessImage6, 
                        byte[] AccessImage7, 
                        byte[] AccessImage8, 
                        byte[] AccessImage9, 
                        byte[] AccessImage10, 
                        string Column1) {
                dtRow rowdtRow = ((dtRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RMCode,
                        PlantLotNo,
                        ReceiptDate,
                        DisposalDate,
                        SafetyImage1,
                        SafetyImage2,
                        SafetyImage3,
                        SafetyImage4,
                        SafetyImage5,
                        SafetyImage6,
                        SafetyImage7,
                        SafetyImage8,
                        SafetyImage9,
                        SafetyImage10,
                        AccessImage1,
                        AccessImage2,
                        AccessImage3,
                        AccessImage4,
                        AccessImage5,
                        AccessImage6,
                        AccessImage7,
                        AccessImage8,
                        AccessImage9,
                        AccessImage10,
                        Column1};
                rowdtRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtRow);
                return rowdtRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtDataTable cln = ((dtDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnRMCode = base.Columns["RMCode"];
                this.columnPlantLotNo = base.Columns["PlantLotNo"];
                this.columnReceiptDate = base.Columns["ReceiptDate"];
                this.columnDisposalDate = base.Columns["DisposalDate"];
                this.columnSafetyImage1 = base.Columns["SafetyImage1"];
                this.columnSafetyImage2 = base.Columns["SafetyImage2"];
                this.columnSafetyImage3 = base.Columns["SafetyImage3"];
                this.columnSafetyImage4 = base.Columns["SafetyImage4"];
                this.columnSafetyImage5 = base.Columns["SafetyImage5"];
                this.columnSafetyImage6 = base.Columns["SafetyImage6"];
                this.columnSafetyImage7 = base.Columns["SafetyImage7"];
                this.columnSafetyImage8 = base.Columns["SafetyImage8"];
                this.columnSafetyImage9 = base.Columns["SafetyImage9"];
                this.columnSafetyImage10 = base.Columns["SafetyImage10"];
                this.columnAccessImage1 = base.Columns["AccessImage1"];
                this.columnAccessImage2 = base.Columns["AccessImage2"];
                this.columnAccessImage3 = base.Columns["AccessImage3"];
                this.columnAccessImage4 = base.Columns["AccessImage4"];
                this.columnAccessImage5 = base.Columns["AccessImage5"];
                this.columnAccessImage6 = base.Columns["AccessImage6"];
                this.columnAccessImage7 = base.Columns["AccessImage7"];
                this.columnAccessImage8 = base.Columns["AccessImage8"];
                this.columnAccessImage9 = base.Columns["AccessImage9"];
                this.columnAccessImage10 = base.Columns["AccessImage10"];
                this.columnColumn1 = base.Columns["Column1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnRMCode = new global::System.Data.DataColumn("RMCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRMCode);
                this.columnPlantLotNo = new global::System.Data.DataColumn("PlantLotNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlantLotNo);
                this.columnReceiptDate = new global::System.Data.DataColumn("ReceiptDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceiptDate);
                this.columnDisposalDate = new global::System.Data.DataColumn("DisposalDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisposalDate);
                this.columnSafetyImage1 = new global::System.Data.DataColumn("SafetyImage1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyImage1);
                this.columnSafetyImage2 = new global::System.Data.DataColumn("SafetyImage2", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyImage2);
                this.columnSafetyImage3 = new global::System.Data.DataColumn("SafetyImage3", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyImage3);
                this.columnSafetyImage4 = new global::System.Data.DataColumn("SafetyImage4", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyImage4);
                this.columnSafetyImage5 = new global::System.Data.DataColumn("SafetyImage5", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyImage5);
                this.columnSafetyImage6 = new global::System.Data.DataColumn("SafetyImage6", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyImage6);
                this.columnSafetyImage7 = new global::System.Data.DataColumn("SafetyImage7", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyImage7);
                this.columnSafetyImage8 = new global::System.Data.DataColumn("SafetyImage8", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyImage8);
                this.columnSafetyImage9 = new global::System.Data.DataColumn("SafetyImage9", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyImage9);
                this.columnSafetyImage10 = new global::System.Data.DataColumn("SafetyImage10", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSafetyImage10);
                this.columnAccessImage1 = new global::System.Data.DataColumn("AccessImage1", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessImage1);
                this.columnAccessImage2 = new global::System.Data.DataColumn("AccessImage2", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessImage2);
                this.columnAccessImage3 = new global::System.Data.DataColumn("AccessImage3", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessImage3);
                this.columnAccessImage4 = new global::System.Data.DataColumn("AccessImage4", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessImage4);
                this.columnAccessImage5 = new global::System.Data.DataColumn("AccessImage5", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessImage5);
                this.columnAccessImage6 = new global::System.Data.DataColumn("AccessImage6", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessImage6);
                this.columnAccessImage7 = new global::System.Data.DataColumn("AccessImage7", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessImage7);
                this.columnAccessImage8 = new global::System.Data.DataColumn("AccessImage8", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessImage8);
                this.columnAccessImage9 = new global::System.Data.DataColumn("AccessImage9", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessImage9);
                this.columnAccessImage10 = new global::System.Data.DataColumn("AccessImage10", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessImage10);
                this.columnColumn1 = new global::System.Data.DataColumn("Column1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumn1);
                this.columnSafetyImage1.Caption = "SysImage1";
                this.columnSafetyImage2.Caption = "SysImage1";
                this.columnSafetyImage3.Caption = "SysImage1";
                this.columnSafetyImage4.Caption = "SysImage1";
                this.columnSafetyImage5.Caption = "SysImage1";
                this.columnSafetyImage6.Caption = "SysImage1";
                this.columnSafetyImage7.Caption = "SysImage1";
                this.columnSafetyImage8.Caption = "SysImage1";
                this.columnSafetyImage9.Caption = "SysImage1";
                this.columnSafetyImage10.Caption = "SysImage1";
                this.columnAccessImage1.Caption = "SysImage1";
                this.columnAccessImage2.Caption = "SysImage1";
                this.columnAccessImage3.Caption = "SysImage1";
                this.columnAccessImage4.Caption = "SysImage1";
                this.columnAccessImage5.Caption = "SysImage1";
                this.columnAccessImage6.Caption = "SysImage1";
                this.columnAccessImage7.Caption = "SysImage1";
                this.columnAccessImage8.Caption = "SysImage1";
                this.columnAccessImage9.Caption = "SysImage1";
                this.columnAccessImage10.Caption = "SysImage1";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRow NewdtRow() {
                return ((dtRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtRowChanged != null)) {
                    this.dtRowChanged(this, new dtRowChangeEvent(((dtRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtRowChanging != null)) {
                    this.dtRowChanging(this, new dtRowChangeEvent(((dtRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtRowDeleted != null)) {
                    this.dtRowDeleted(this, new dtRowChangeEvent(((dtRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtRowDeleting != null)) {
                    this.dtRowDeleting(this, new dtRowChangeEvent(((dtRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtRow(dtRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                RetainerLabelDataSet ds = new RetainerLabelDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtRow : global::System.Data.DataRow {
            
            private dtDataTable tabledt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledt = ((dtDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string RMCode {
                get {
                    try {
                        return ((string)(this[this.tabledt.RMCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RMCode\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.RMCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PlantLotNo {
                get {
                    try {
                        return ((string)(this[this.tabledt.PlantLotNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PlantLotNo\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.PlantLotNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReceiptDate {
                get {
                    try {
                        return ((string)(this[this.tabledt.ReceiptDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceiptDate\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.ReceiptDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DisposalDate {
                get {
                    try {
                        return ((string)(this[this.tabledt.DisposalDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DisposalDate\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.DisposalDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SafetyImage1 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.SafetyImage1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyImage1\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.SafetyImage1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SafetyImage2 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.SafetyImage2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyImage2\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.SafetyImage2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SafetyImage3 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.SafetyImage3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyImage3\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.SafetyImage3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SafetyImage4 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.SafetyImage4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyImage4\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.SafetyImage4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SafetyImage5 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.SafetyImage5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyImage5\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.SafetyImage5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SafetyImage6 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.SafetyImage6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyImage6\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.SafetyImage6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SafetyImage7 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.SafetyImage7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyImage7\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.SafetyImage7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SafetyImage8 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.SafetyImage8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyImage8\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.SafetyImage8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SafetyImage9 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.SafetyImage9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyImage9\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.SafetyImage9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] SafetyImage10 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.SafetyImage10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SafetyImage10\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.SafetyImage10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] AccessImage1 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.AccessImage1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessImage1\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.AccessImage1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] AccessImage2 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.AccessImage2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessImage2\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.AccessImage2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] AccessImage3 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.AccessImage3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessImage3\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.AccessImage3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] AccessImage4 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.AccessImage4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessImage4\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.AccessImage4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] AccessImage5 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.AccessImage5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessImage5\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.AccessImage5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] AccessImage6 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.AccessImage6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessImage6\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.AccessImage6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] AccessImage7 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.AccessImage7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessImage7\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.AccessImage7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] AccessImage8 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.AccessImage8Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessImage8\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.AccessImage8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] AccessImage9 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.AccessImage9Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessImage9\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.AccessImage9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] AccessImage10 {
                get {
                    try {
                        return ((byte[])(this[this.tabledt.AccessImage10Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AccessImage10\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.AccessImage10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Column1 {
                get {
                    try {
                        return ((string)(this[this.tabledt.Column1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Column1\' in table \'dt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledt.Column1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRMCodeNull() {
                return this.IsNull(this.tabledt.RMCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRMCodeNull() {
                this[this.tabledt.RMCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPlantLotNoNull() {
                return this.IsNull(this.tabledt.PlantLotNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPlantLotNoNull() {
                this[this.tabledt.PlantLotNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceiptDateNull() {
                return this.IsNull(this.tabledt.ReceiptDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceiptDateNull() {
                this[this.tabledt.ReceiptDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDisposalDateNull() {
                return this.IsNull(this.tabledt.DisposalDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDisposalDateNull() {
                this[this.tabledt.DisposalDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyImage1Null() {
                return this.IsNull(this.tabledt.SafetyImage1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyImage1Null() {
                this[this.tabledt.SafetyImage1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyImage2Null() {
                return this.IsNull(this.tabledt.SafetyImage2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyImage2Null() {
                this[this.tabledt.SafetyImage2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyImage3Null() {
                return this.IsNull(this.tabledt.SafetyImage3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyImage3Null() {
                this[this.tabledt.SafetyImage3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyImage4Null() {
                return this.IsNull(this.tabledt.SafetyImage4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyImage4Null() {
                this[this.tabledt.SafetyImage4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyImage5Null() {
                return this.IsNull(this.tabledt.SafetyImage5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyImage5Null() {
                this[this.tabledt.SafetyImage5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyImage6Null() {
                return this.IsNull(this.tabledt.SafetyImage6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyImage6Null() {
                this[this.tabledt.SafetyImage6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyImage7Null() {
                return this.IsNull(this.tabledt.SafetyImage7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyImage7Null() {
                this[this.tabledt.SafetyImage7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyImage8Null() {
                return this.IsNull(this.tabledt.SafetyImage8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyImage8Null() {
                this[this.tabledt.SafetyImage8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyImage9Null() {
                return this.IsNull(this.tabledt.SafetyImage9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyImage9Null() {
                this[this.tabledt.SafetyImage9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSafetyImage10Null() {
                return this.IsNull(this.tabledt.SafetyImage10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSafetyImage10Null() {
                this[this.tabledt.SafetyImage10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessImage1Null() {
                return this.IsNull(this.tabledt.AccessImage1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessImage1Null() {
                this[this.tabledt.AccessImage1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessImage2Null() {
                return this.IsNull(this.tabledt.AccessImage2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessImage2Null() {
                this[this.tabledt.AccessImage2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessImage3Null() {
                return this.IsNull(this.tabledt.AccessImage3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessImage3Null() {
                this[this.tabledt.AccessImage3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessImage4Null() {
                return this.IsNull(this.tabledt.AccessImage4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessImage4Null() {
                this[this.tabledt.AccessImage4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessImage5Null() {
                return this.IsNull(this.tabledt.AccessImage5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessImage5Null() {
                this[this.tabledt.AccessImage5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessImage6Null() {
                return this.IsNull(this.tabledt.AccessImage6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessImage6Null() {
                this[this.tabledt.AccessImage6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessImage7Null() {
                return this.IsNull(this.tabledt.AccessImage7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessImage7Null() {
                this[this.tabledt.AccessImage7Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessImage8Null() {
                return this.IsNull(this.tabledt.AccessImage8Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessImage8Null() {
                this[this.tabledt.AccessImage8Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessImage9Null() {
                return this.IsNull(this.tabledt.AccessImage9Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessImage9Null() {
                this[this.tabledt.AccessImage9Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccessImage10Null() {
                return this.IsNull(this.tabledt.AccessImage10Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccessImage10Null() {
                this[this.tabledt.AccessImage10Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsColumn1Null() {
                return this.IsNull(this.tabledt.Column1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetColumn1Null() {
                this[this.tabledt.Column1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtRowChangeEvent : global::System.EventArgs {
            
            private dtRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRowChangeEvent(dtRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591