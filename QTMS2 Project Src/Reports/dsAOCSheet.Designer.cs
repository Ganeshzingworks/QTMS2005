//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QTMS.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsAOCSheet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsAOCSheet : global::System.Data.DataSet {
        
        private STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsAOCSheet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsAOCSheet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["STP_Select_tblAOCSheet_FGNo_FNo_FMID"] != null)) {
                    base.Tables.Add(new STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable(ds.Tables["STP_Select_tblAOCSheet_FGNo_FNo_FMID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable STP_Select_tblAOCSheet_FGNo_FNo_FMID {
            get {
                return this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsAOCSheet cln = ((dsAOCSheet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["STP_Select_tblAOCSheet_FGNo_FNo_FMID"] != null)) {
                    base.Tables.Add(new STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable(ds.Tables["STP_Select_tblAOCSheet_FGNo_FNo_FMID"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID = ((STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable)(base.Tables["STP_Select_tblAOCSheet_FGNo_FNo_FMID"]));
            if ((initTable == true)) {
                if ((this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID != null)) {
                    this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsAOCSheet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsAOCSheet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID = new STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable();
            base.Tables.Add(this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSTP_Select_tblAOCSheet_FGNo_FNo_FMID() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsAOCSheet ds = new dsAOCSheet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEventHandler(object sender, STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnAOCID;
            
            private global::System.Data.DataColumn columnFGNo;
            
            private global::System.Data.DataColumn columnFNo;
            
            private global::System.Data.DataColumn columnFMID;
            
            private global::System.Data.DataColumn columnRequestDate;
            
            private global::System.Data.DataColumn columnClearenceDate;
            
            private global::System.Data.DataColumn columnCommersializeAuthorisation;
            
            private global::System.Data.DataColumn columnFGCode;
            
            private global::System.Data.DataColumn columnFGDesc;
            
            private global::System.Data.DataColumn columnFillVolume;
            
            private global::System.Data.DataColumn columnFormulaNo;
            
            private global::System.Data.DataColumn columnMfgWo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable() {
                this.TableName = "STP_Select_tblAOCSheet_FGNo_FNo_FMID";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AOCIDColumn {
                get {
                    return this.columnAOCID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FGNoColumn {
                get {
                    return this.columnFGNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNoColumn {
                get {
                    return this.columnFNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FMIDColumn {
                get {
                    return this.columnFMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RequestDateColumn {
                get {
                    return this.columnRequestDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ClearenceDateColumn {
                get {
                    return this.columnClearenceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommersializeAuthorisationColumn {
                get {
                    return this.columnCommersializeAuthorisation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FGCodeColumn {
                get {
                    return this.columnFGCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FGDescColumn {
                get {
                    return this.columnFGDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FillVolumeColumn {
                get {
                    return this.columnFillVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormulaNoColumn {
                get {
                    return this.columnFormulaNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MfgWoColumn {
                get {
                    return this.columnMfgWo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow this[int index] {
                get {
                    return ((STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow)(this.Rows[index]));
                }
            }
            
            public event STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEventHandler STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChanging;
            
            public event STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEventHandler STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChanged;
            
            public event STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEventHandler STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowDeleting;
            
            public event STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEventHandler STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSTP_Select_tblAOCSheet_FGNo_FNo_FMIDRow(STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow AddSTP_Select_tblAOCSheet_FGNo_FNo_FMIDRow(long FGNo, long FNo, long FMID, System.DateTime RequestDate, System.DateTime ClearenceDate, string CommersializeAuthorisation, string FGCode, string FGDesc, string FillVolume, string FormulaNo, string MfgWo) {
                STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow rowSTP_Select_tblAOCSheet_FGNo_FNo_FMIDRow = ((STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FGNo,
                        FNo,
                        FMID,
                        RequestDate,
                        ClearenceDate,
                        CommersializeAuthorisation,
                        FGCode,
                        FGDesc,
                        FillVolume,
                        FormulaNo,
                        MfgWo};
                rowSTP_Select_tblAOCSheet_FGNo_FNo_FMIDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTP_Select_tblAOCSheet_FGNo_FNo_FMIDRow);
                return rowSTP_Select_tblAOCSheet_FGNo_FNo_FMIDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow FindByAOCID(long AOCID) {
                return ((STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow)(this.Rows.Find(new object[] {
                            AOCID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable cln = ((STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnAOCID = base.Columns["AOCID"];
                this.columnFGNo = base.Columns["FGNo"];
                this.columnFNo = base.Columns["FNo"];
                this.columnFMID = base.Columns["FMID"];
                this.columnRequestDate = base.Columns["RequestDate"];
                this.columnClearenceDate = base.Columns["ClearenceDate"];
                this.columnCommersializeAuthorisation = base.Columns["CommersializeAuthorisation"];
                this.columnFGCode = base.Columns["FGCode"];
                this.columnFGDesc = base.Columns["FGDesc"];
                this.columnFillVolume = base.Columns["FillVolume"];
                this.columnFormulaNo = base.Columns["FormulaNo"];
                this.columnMfgWo = base.Columns["MfgWo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnAOCID = new global::System.Data.DataColumn("AOCID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAOCID);
                this.columnFGNo = new global::System.Data.DataColumn("FGNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFGNo);
                this.columnFNo = new global::System.Data.DataColumn("FNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFNo);
                this.columnFMID = new global::System.Data.DataColumn("FMID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMID);
                this.columnRequestDate = new global::System.Data.DataColumn("RequestDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRequestDate);
                this.columnClearenceDate = new global::System.Data.DataColumn("ClearenceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClearenceDate);
                this.columnCommersializeAuthorisation = new global::System.Data.DataColumn("CommersializeAuthorisation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommersializeAuthorisation);
                this.columnFGCode = new global::System.Data.DataColumn("FGCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFGCode);
                this.columnFGDesc = new global::System.Data.DataColumn("FGDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFGDesc);
                this.columnFillVolume = new global::System.Data.DataColumn("FillVolume", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFillVolume);
                this.columnFormulaNo = new global::System.Data.DataColumn("FormulaNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormulaNo);
                this.columnMfgWo = new global::System.Data.DataColumn("MfgWo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMfgWo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAOCID}, true));
                this.columnAOCID.AutoIncrement = true;
                this.columnAOCID.AllowDBNull = false;
                this.columnAOCID.ReadOnly = true;
                this.columnAOCID.Unique = true;
                this.columnCommersializeAuthorisation.MaxLength = 150;
                this.columnFGCode.MaxLength = 200;
                this.columnFGDesc.MaxLength = 250;
                this.columnFillVolume.MaxLength = 100;
                this.columnFormulaNo.AllowDBNull = false;
                this.columnFormulaNo.MaxLength = 200;
                this.columnMfgWo.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow NewSTP_Select_tblAOCSheet_FGNo_FNo_FMIDRow() {
                return ((STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChanged != null)) {
                    this.STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChanged(this, new STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEvent(((STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChanging != null)) {
                    this.STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChanging(this, new STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEvent(((STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowDeleted != null)) {
                    this.STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowDeleted(this, new STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEvent(((STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowDeleting != null)) {
                    this.STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowDeleting(this, new STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEvent(((STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSTP_Select_tblAOCSheet_FGNo_FNo_FMIDRow(STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsAOCSheet ds = new dsAOCSheet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow : global::System.Data.DataRow {
            
            private STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID = ((STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AOCID {
                get {
                    return ((long)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.AOCIDColumn]));
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.AOCIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FGNo {
                get {
                    try {
                        return ((long)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FGNo\' in table \'STP_Select_tblAOCSheet_FGNo_FNo_FMID\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FNo {
                get {
                    try {
                        return ((long)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FNo\' in table \'STP_Select_tblAOCSheet_FGNo_FNo_FMID\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FMID {
                get {
                    try {
                        return ((long)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FMIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FMID\' in table \'STP_Select_tblAOCSheet_FGNo_FNo_FMID\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime RequestDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.RequestDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RequestDate\' in table \'STP_Select_tblAOCSheet_FGNo_FNo_FMID" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.RequestDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ClearenceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.ClearenceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClearenceDate\' in table \'STP_Select_tblAOCSheet_FGNo_FNo_FM" +
                                "ID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.ClearenceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CommersializeAuthorisation {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.CommersializeAuthorisationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CommersializeAuthorisation\' in table \'STP_Select_tblAOCShee" +
                                "t_FGNo_FNo_FMID\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.CommersializeAuthorisationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FGCode {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FGCode\' in table \'STP_Select_tblAOCSheet_FGNo_FNo_FMID\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FGDesc {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FGDesc\' in table \'STP_Select_tblAOCSheet_FGNo_FNo_FMID\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FillVolume {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FillVolumeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FillVolume\' in table \'STP_Select_tblAOCSheet_FGNo_FNo_FMID\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FillVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FormulaNo {
                get {
                    return ((string)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FormulaNoColumn]));
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FormulaNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MfgWo {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.MfgWoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MfgWo\' in table \'STP_Select_tblAOCSheet_FGNo_FNo_FMID\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.MfgWoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFGNoNull() {
                return this.IsNull(this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFGNoNull() {
                this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFNoNull() {
                return this.IsNull(this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFNoNull() {
                this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFMIDNull() {
                return this.IsNull(this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FMIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFMIDNull() {
                this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FMIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRequestDateNull() {
                return this.IsNull(this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.RequestDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRequestDateNull() {
                this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.RequestDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClearenceDateNull() {
                return this.IsNull(this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.ClearenceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClearenceDateNull() {
                this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.ClearenceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommersializeAuthorisationNull() {
                return this.IsNull(this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.CommersializeAuthorisationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommersializeAuthorisationNull() {
                this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.CommersializeAuthorisationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFGCodeNull() {
                return this.IsNull(this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFGCodeNull() {
                this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFGDescNull() {
                return this.IsNull(this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFGDescNull() {
                this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FGDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFillVolumeNull() {
                return this.IsNull(this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FillVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFillVolumeNull() {
                this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.FillVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMfgWoNull() {
                return this.IsNull(this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.MfgWoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMfgWoNull() {
                this[this.tableSTP_Select_tblAOCSheet_FGNo_FNo_FMID.MfgWoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEvent : global::System.EventArgs {
            
            private STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblAOCSheet_FGNo_FNo_FMIDRowChangeEvent(STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblAOCSheet_FGNo_FNo_FMIDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace QTMS.Reports.dsAOCSheetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STP_Select_tblAOCSheet_FGNo_FNo_FMIDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public STP_Select_tblAOCSheet_FGNo_FNo_FMIDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STP_Select_tblAOCSheet_FGNo_FNo_FMID";
            tableMapping.ColumnMappings.Add("AOCID", "AOCID");
            tableMapping.ColumnMappings.Add("FGNo", "FGNo");
            tableMapping.ColumnMappings.Add("FNo", "FNo");
            tableMapping.ColumnMappings.Add("FMID", "FMID");
            tableMapping.ColumnMappings.Add("RequestDate", "RequestDate");
            tableMapping.ColumnMappings.Add("ClearenceDate", "ClearenceDate");
            tableMapping.ColumnMappings.Add("CommersializeAuthorisation", "CommersializeAuthorisation");
            tableMapping.ColumnMappings.Add("FGCode", "FGCode");
            tableMapping.ColumnMappings.Add("FGDesc", "FGDesc");
            tableMapping.ColumnMappings.Add("FillVolume", "FillVolume");
            tableMapping.ColumnMappings.Add("FormulaNo", "FormulaNo");
            tableMapping.ColumnMappings.Add("MfgWo", "MfgWo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QTMS.Properties.Settings.Default.QTMS2ConnectionString1;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.STP_Select_tblAOCSheet_FGNo_FNo_FMID";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FGNo", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNo", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FMID", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsAOCSheet.STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable dataTable, global::System.Nullable<long> FGNo, global::System.Nullable<long> FNo, global::System.Nullable<long> FMID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FGNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(FGNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(FNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FMID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((long)(FMID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsAOCSheet.STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable GetData(global::System.Nullable<long> FGNo, global::System.Nullable<long> FNo, global::System.Nullable<long> FMID) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FGNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(FGNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((FNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((long)(FNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((FMID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((long)(FMID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            dsAOCSheet.STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable dataTable = new dsAOCSheet.STP_Select_tblAOCSheet_FGNo_FNo_FMIDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591