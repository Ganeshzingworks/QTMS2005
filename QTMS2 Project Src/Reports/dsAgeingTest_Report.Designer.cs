//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8813
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QTMS.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsAgeingTest_Report")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsAgeingTest_Report : global::System.Data.DataSet {
        
        private View_AgeingTest_ReportDataTable tableView_AgeingTest_Report;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsAgeingTest_Report() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsAgeingTest_Report(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["View_AgeingTest_Report"] != null)) {
                    base.Tables.Add(new View_AgeingTest_ReportDataTable(ds.Tables["View_AgeingTest_Report"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public View_AgeingTest_ReportDataTable View_AgeingTest_Report {
            get {
                return this.tableView_AgeingTest_Report;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsAgeingTest_Report cln = ((dsAgeingTest_Report)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["View_AgeingTest_Report"] != null)) {
                    base.Tables.Add(new View_AgeingTest_ReportDataTable(ds.Tables["View_AgeingTest_Report"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableView_AgeingTest_Report = ((View_AgeingTest_ReportDataTable)(base.Tables["View_AgeingTest_Report"]));
            if ((initTable == true)) {
                if ((this.tableView_AgeingTest_Report != null)) {
                    this.tableView_AgeingTest_Report.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsAgeingTest_Report";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsAgeingTest_Report.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableView_AgeingTest_Report = new View_AgeingTest_ReportDataTable();
            base.Tables.Add(this.tableView_AgeingTest_Report);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeView_AgeingTest_Report() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsAgeingTest_Report ds = new dsAgeingTest_Report();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void View_AgeingTest_ReportRowChangeEventHandler(object sender, View_AgeingTest_ReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class View_AgeingTest_ReportDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFMID;
            
            private global::System.Data.DataColumn columnTestNo;
            
            private global::System.Data.DataColumn columnNormsMin;
            
            private global::System.Data.DataColumn columnNormsMax;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnComment;
            
            private global::System.Data.DataColumn columnTestName;
            
            private global::System.Data.DataColumn columnDetails;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnQPFStatus;
            
            private global::System.Data.DataColumn columnQPFComment;
            
            private global::System.Data.DataColumn columnConfirmation;
            
            private global::System.Data.DataColumn columnAgeingResultComment;
            
            private global::System.Data.DataColumn columnCheckedBy;
            
            private global::System.Data.DataColumn columnVerifiedBy;
            
            private global::System.Data.DataColumn columnFormulaNo;
            
            private global::System.Data.DataColumn columnMfgWo;
            
            private global::System.Data.DataColumn columnMfgDate;
            
            private global::System.Data.DataColumn columnFillingDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_AgeingTest_ReportDataTable() {
                this.TableName = "View_AgeingTest_Report";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_AgeingTest_ReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected View_AgeingTest_ReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FMIDColumn {
                get {
                    return this.columnFMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TestNoColumn {
                get {
                    return this.columnTestNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NormsMinColumn {
                get {
                    return this.columnNormsMin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NormsMaxColumn {
                get {
                    return this.columnNormsMax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CommentColumn {
                get {
                    return this.columnComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TestNameColumn {
                get {
                    return this.columnTestName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DetailsColumn {
                get {
                    return this.columnDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QPFStatusColumn {
                get {
                    return this.columnQPFStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QPFCommentColumn {
                get {
                    return this.columnQPFComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ConfirmationColumn {
                get {
                    return this.columnConfirmation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeingResultCommentColumn {
                get {
                    return this.columnAgeingResultComment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CheckedByColumn {
                get {
                    return this.columnCheckedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VerifiedByColumn {
                get {
                    return this.columnVerifiedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormulaNoColumn {
                get {
                    return this.columnFormulaNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MfgWoColumn {
                get {
                    return this.columnMfgWo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MfgDateColumn {
                get {
                    return this.columnMfgDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FillingDateColumn {
                get {
                    return this.columnFillingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_AgeingTest_ReportRow this[int index] {
                get {
                    return ((View_AgeingTest_ReportRow)(this.Rows[index]));
                }
            }
            
            public event View_AgeingTest_ReportRowChangeEventHandler View_AgeingTest_ReportRowChanging;
            
            public event View_AgeingTest_ReportRowChangeEventHandler View_AgeingTest_ReportRowChanged;
            
            public event View_AgeingTest_ReportRowChangeEventHandler View_AgeingTest_ReportRowDeleting;
            
            public event View_AgeingTest_ReportRowChangeEventHandler View_AgeingTest_ReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddView_AgeingTest_ReportRow(View_AgeingTest_ReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_AgeingTest_ReportRow AddView_AgeingTest_ReportRow(
                        int FMID, 
                        int TestNo, 
                        string NormsMin, 
                        string NormsMax, 
                        string Status, 
                        string Comment, 
                        string TestName, 
                        string Details, 
                        string Description, 
                        string QPFStatus, 
                        string QPFComment, 
                        string Confirmation, 
                        string AgeingResultComment, 
                        string CheckedBy, 
                        string VerifiedBy, 
                        string FormulaNo, 
                        string MfgWo, 
                        System.DateTime MfgDate, 
                        System.DateTime FillingDate) {
                View_AgeingTest_ReportRow rowView_AgeingTest_ReportRow = ((View_AgeingTest_ReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FMID,
                        TestNo,
                        NormsMin,
                        NormsMax,
                        Status,
                        Comment,
                        TestName,
                        Details,
                        Description,
                        QPFStatus,
                        QPFComment,
                        Confirmation,
                        AgeingResultComment,
                        CheckedBy,
                        VerifiedBy,
                        FormulaNo,
                        MfgWo,
                        MfgDate,
                        FillingDate};
                rowView_AgeingTest_ReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowView_AgeingTest_ReportRow);
                return rowView_AgeingTest_ReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                View_AgeingTest_ReportDataTable cln = ((View_AgeingTest_ReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new View_AgeingTest_ReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFMID = base.Columns["FMID"];
                this.columnTestNo = base.Columns["TestNo"];
                this.columnNormsMin = base.Columns["NormsMin"];
                this.columnNormsMax = base.Columns["NormsMax"];
                this.columnStatus = base.Columns["Status"];
                this.columnComment = base.Columns["Comment"];
                this.columnTestName = base.Columns["TestName"];
                this.columnDetails = base.Columns["Details"];
                this.columnDescription = base.Columns["Description"];
                this.columnQPFStatus = base.Columns["QPFStatus"];
                this.columnQPFComment = base.Columns["QPFComment"];
                this.columnConfirmation = base.Columns["Confirmation"];
                this.columnAgeingResultComment = base.Columns["AgeingResultComment"];
                this.columnCheckedBy = base.Columns["CheckedBy"];
                this.columnVerifiedBy = base.Columns["VerifiedBy"];
                this.columnFormulaNo = base.Columns["FormulaNo"];
                this.columnMfgWo = base.Columns["MfgWo"];
                this.columnMfgDate = base.Columns["MfgDate"];
                this.columnFillingDate = base.Columns["FillingDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFMID = new global::System.Data.DataColumn("FMID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMID);
                this.columnTestNo = new global::System.Data.DataColumn("TestNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestNo);
                this.columnNormsMin = new global::System.Data.DataColumn("NormsMin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormsMin);
                this.columnNormsMax = new global::System.Data.DataColumn("NormsMax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNormsMax);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnComment = new global::System.Data.DataColumn("Comment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComment);
                this.columnTestName = new global::System.Data.DataColumn("TestName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTestName);
                this.columnDetails = new global::System.Data.DataColumn("Details", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetails);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnQPFStatus = new global::System.Data.DataColumn("QPFStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQPFStatus);
                this.columnQPFComment = new global::System.Data.DataColumn("QPFComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQPFComment);
                this.columnConfirmation = new global::System.Data.DataColumn("Confirmation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConfirmation);
                this.columnAgeingResultComment = new global::System.Data.DataColumn("AgeingResultComment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAgeingResultComment);
                this.columnCheckedBy = new global::System.Data.DataColumn("CheckedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckedBy);
                this.columnVerifiedBy = new global::System.Data.DataColumn("VerifiedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVerifiedBy);
                this.columnFormulaNo = new global::System.Data.DataColumn("FormulaNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormulaNo);
                this.columnMfgWo = new global::System.Data.DataColumn("MfgWo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMfgWo);
                this.columnMfgDate = new global::System.Data.DataColumn("MfgDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMfgDate);
                this.columnFillingDate = new global::System.Data.DataColumn("FillingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFillingDate);
                this.columnNormsMin.MaxLength = 50;
                this.columnNormsMax.MaxLength = 50;
                this.columnStatus.MaxLength = 10;
                this.columnComment.MaxLength = 200;
                this.columnTestName.MaxLength = 250;
                this.columnDetails.ReadOnly = true;
                this.columnDetails.MaxLength = 501;
                this.columnDescription.MaxLength = 100;
                this.columnQPFStatus.MaxLength = 50;
                this.columnQPFComment.MaxLength = 250;
                this.columnConfirmation.MaxLength = 50;
                this.columnAgeingResultComment.MaxLength = 250;
                this.columnCheckedBy.MaxLength = 50;
                this.columnVerifiedBy.MaxLength = 50;
                this.columnFormulaNo.AllowDBNull = false;
                this.columnFormulaNo.MaxLength = 200;
                this.columnMfgWo.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_AgeingTest_ReportRow NewView_AgeingTest_ReportRow() {
                return ((View_AgeingTest_ReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new View_AgeingTest_ReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(View_AgeingTest_ReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.View_AgeingTest_ReportRowChanged != null)) {
                    this.View_AgeingTest_ReportRowChanged(this, new View_AgeingTest_ReportRowChangeEvent(((View_AgeingTest_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.View_AgeingTest_ReportRowChanging != null)) {
                    this.View_AgeingTest_ReportRowChanging(this, new View_AgeingTest_ReportRowChangeEvent(((View_AgeingTest_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.View_AgeingTest_ReportRowDeleted != null)) {
                    this.View_AgeingTest_ReportRowDeleted(this, new View_AgeingTest_ReportRowChangeEvent(((View_AgeingTest_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.View_AgeingTest_ReportRowDeleting != null)) {
                    this.View_AgeingTest_ReportRowDeleting(this, new View_AgeingTest_ReportRowChangeEvent(((View_AgeingTest_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveView_AgeingTest_ReportRow(View_AgeingTest_ReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsAgeingTest_Report ds = new dsAgeingTest_Report();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "View_AgeingTest_ReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class View_AgeingTest_ReportRow : global::System.Data.DataRow {
            
            private View_AgeingTest_ReportDataTable tableView_AgeingTest_Report;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal View_AgeingTest_ReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableView_AgeingTest_Report = ((View_AgeingTest_ReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FMID {
                get {
                    try {
                        return ((int)(this[this.tableView_AgeingTest_Report.FMIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FMID\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.FMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TestNo {
                get {
                    try {
                        return ((int)(this[this.tableView_AgeingTest_Report.TestNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestNo\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.TestNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NormsMin {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.NormsMinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NormsMin\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.NormsMinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NormsMax {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.NormsMaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NormsMax\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.NormsMaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comment {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.CommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comment\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.CommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TestName {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.TestNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TestName\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.TestNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Details {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.DetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Details\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.DetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Description\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QPFStatus {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.QPFStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QPFStatus\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.QPFStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QPFComment {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.QPFCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QPFComment\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.QPFCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Confirmation {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.ConfirmationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Confirmation\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.ConfirmationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AgeingResultComment {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.AgeingResultCommentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AgeingResultComment\' in table \'View_AgeingTest_Report\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.AgeingResultCommentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CheckedBy {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.CheckedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CheckedBy\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.CheckedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VerifiedBy {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.VerifiedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VerifiedBy\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.VerifiedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FormulaNo {
                get {
                    return ((string)(this[this.tableView_AgeingTest_Report.FormulaNoColumn]));
                }
                set {
                    this[this.tableView_AgeingTest_Report.FormulaNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MfgWo {
                get {
                    try {
                        return ((string)(this[this.tableView_AgeingTest_Report.MfgWoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MfgWo\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.MfgWoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime MfgDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_AgeingTest_Report.MfgDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MfgDate\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.MfgDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FillingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableView_AgeingTest_Report.FillingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FillingDate\' in table \'View_AgeingTest_Report\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableView_AgeingTest_Report.FillingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFMIDNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.FMIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFMIDNull() {
                this[this.tableView_AgeingTest_Report.FMIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTestNoNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.TestNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTestNoNull() {
                this[this.tableView_AgeingTest_Report.TestNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNormsMinNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.NormsMinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNormsMinNull() {
                this[this.tableView_AgeingTest_Report.NormsMinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNormsMaxNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.NormsMaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNormsMaxNull() {
                this[this.tableView_AgeingTest_Report.NormsMaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableView_AgeingTest_Report.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommentNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.CommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommentNull() {
                this[this.tableView_AgeingTest_Report.CommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTestNameNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.TestNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTestNameNull() {
                this[this.tableView_AgeingTest_Report.TestNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetailsNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.DetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetailsNull() {
                this[this.tableView_AgeingTest_Report.DetailsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableView_AgeingTest_Report.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQPFStatusNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.QPFStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQPFStatusNull() {
                this[this.tableView_AgeingTest_Report.QPFStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQPFCommentNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.QPFCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQPFCommentNull() {
                this[this.tableView_AgeingTest_Report.QPFCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsConfirmationNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.ConfirmationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetConfirmationNull() {
                this[this.tableView_AgeingTest_Report.ConfirmationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeingResultCommentNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.AgeingResultCommentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeingResultCommentNull() {
                this[this.tableView_AgeingTest_Report.AgeingResultCommentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCheckedByNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.CheckedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCheckedByNull() {
                this[this.tableView_AgeingTest_Report.CheckedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVerifiedByNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.VerifiedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVerifiedByNull() {
                this[this.tableView_AgeingTest_Report.VerifiedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMfgWoNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.MfgWoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMfgWoNull() {
                this[this.tableView_AgeingTest_Report.MfgWoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMfgDateNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.MfgDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMfgDateNull() {
                this[this.tableView_AgeingTest_Report.MfgDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFillingDateNull() {
                return this.IsNull(this.tableView_AgeingTest_Report.FillingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFillingDateNull() {
                this[this.tableView_AgeingTest_Report.FillingDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class View_AgeingTest_ReportRowChangeEvent : global::System.EventArgs {
            
            private View_AgeingTest_ReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_AgeingTest_ReportRowChangeEvent(View_AgeingTest_ReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public View_AgeingTest_ReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace QTMS.Reports.dsAgeingTest_ReportTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class View_AgeingTest_ReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.OleDb.OleDbDataAdapter _adapter;
        
        private global::System.Data.OleDb.OleDbConnection _connection;
        
        private global::System.Data.OleDb.OleDbCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public View_AgeingTest_ReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.OleDb.OleDbDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.OleDb.OleDbConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.OleDb.OleDbCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.OleDb.OleDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.OleDb.OleDbDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "View_AgeingTest_Report";
            tableMapping.ColumnMappings.Add("FMID", "FMID");
            tableMapping.ColumnMappings.Add("TestNo", "TestNo");
            tableMapping.ColumnMappings.Add("NormsMin", "NormsMin");
            tableMapping.ColumnMappings.Add("NormsMax", "NormsMax");
            tableMapping.ColumnMappings.Add("Status", "Status");
            tableMapping.ColumnMappings.Add("Comment", "Comment");
            tableMapping.ColumnMappings.Add("TestName", "TestName");
            tableMapping.ColumnMappings.Add("Details", "Details");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("QPFStatus", "QPFStatus");
            tableMapping.ColumnMappings.Add("QPFComment", "QPFComment");
            tableMapping.ColumnMappings.Add("Confirmation", "Confirmation");
            tableMapping.ColumnMappings.Add("AgeingResultComment", "AgeingResultComment");
            tableMapping.ColumnMappings.Add("CheckedBy", "CheckedBy");
            tableMapping.ColumnMappings.Add("VerifiedBy", "VerifiedBy");
            tableMapping.ColumnMappings.Add("FormulaNo", "FormulaNo");
            tableMapping.ColumnMappings.Add("MfgWo", "MfgWo");
            tableMapping.ColumnMappings.Add("MfgDate", "MfgDate");
            tableMapping.ColumnMappings.Add("FillingDate", "FillingDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.OleDb.OleDbConnection();
            this._connection.ConnectionString = global::QTMS.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.OleDb.OleDbCommand[1];
            this._commandCollection[0] = new global::System.Data.OleDb.OleDbCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ""FMID"", ""TestNo"", ""NormsMin"", ""NormsMax"", ""Status"", ""Comment"", ""TestName"", ""Details"", ""Description"", ""QPFStatus"", ""QPFComment"", ""Confirmation"", ""AgeingResultComment"", ""CheckedBy"", ""VerifiedBy"", ""FormulaNo"", ""MfgWo"", ""MfgDate"", ""FillingDate"" FROM ""dbo"".""View_AgeingTest_Report""";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsAgeingTest_Report.View_AgeingTest_ReportDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsAgeingTest_Report.View_AgeingTest_ReportDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsAgeingTest_Report.View_AgeingTest_ReportDataTable dataTable = new dsAgeingTest_Report.View_AgeingTest_ReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591