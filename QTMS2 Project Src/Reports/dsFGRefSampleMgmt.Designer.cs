//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QTMS.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsFGRefSampleMgmt")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsFGRefSampleMgmt : global::System.Data.DataSet {
        
        private STP_Select_RSMgmtDetails_Fno_ReportDataTable tableSTP_Select_RSMgmtDetails_Fno_Report;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsFGRefSampleMgmt() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsFGRefSampleMgmt(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["STP_Select_RSMgmtDetails_Fno_Report"] != null)) {
                    base.Tables.Add(new STP_Select_RSMgmtDetails_Fno_ReportDataTable(ds.Tables["STP_Select_RSMgmtDetails_Fno_Report"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STP_Select_RSMgmtDetails_Fno_ReportDataTable STP_Select_RSMgmtDetails_Fno_Report {
            get {
                return this.tableSTP_Select_RSMgmtDetails_Fno_Report;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            dsFGRefSampleMgmt cln = ((dsFGRefSampleMgmt)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["STP_Select_RSMgmtDetails_Fno_Report"] != null)) {
                    base.Tables.Add(new STP_Select_RSMgmtDetails_Fno_ReportDataTable(ds.Tables["STP_Select_RSMgmtDetails_Fno_Report"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSTP_Select_RSMgmtDetails_Fno_Report = ((STP_Select_RSMgmtDetails_Fno_ReportDataTable)(base.Tables["STP_Select_RSMgmtDetails_Fno_Report"]));
            if ((initTable == true)) {
                if ((this.tableSTP_Select_RSMgmtDetails_Fno_Report != null)) {
                    this.tableSTP_Select_RSMgmtDetails_Fno_Report.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsFGRefSampleMgmt";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsFGRefSampleMgmt.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSTP_Select_RSMgmtDetails_Fno_Report = new STP_Select_RSMgmtDetails_Fno_ReportDataTable();
            base.Tables.Add(this.tableSTP_Select_RSMgmtDetails_Fno_Report);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSTP_Select_RSMgmtDetails_Fno_Report() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsFGRefSampleMgmt ds = new dsFGRefSampleMgmt();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void STP_Select_RSMgmtDetails_Fno_ReportRowChangeEventHandler(object sender, STP_Select_RSMgmtDetails_Fno_ReportRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STP_Select_RSMgmtDetails_Fno_ReportDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnFNo;
            
            private global::System.Data.DataColumn columnFormulaNo;
            
            private global::System.Data.DataColumn columnBulkDesc;
            
            private global::System.Data.DataColumn columnRSID;
            
            private global::System.Data.DataColumn columnWSID;
            
            private global::System.Data.DataColumn columnValidityDate;
            
            private global::System.Data.DataColumn columnFMID;
            
            private global::System.Data.DataColumn columnMfgWo;
            
            private global::System.Data.DataColumn columnLocID;
            
            private global::System.Data.DataColumn columnLocation;
            
            private global::System.Data.DataColumn columnIRID;
            
            private global::System.Data.DataColumn columnFIFormulaNo;
            
            private global::System.Data.DataColumn columnFIMfgWo;
            
            private global::System.Data.DataColumn columnReceivingDate;
            
            private global::System.Data.DataColumn columnPFLot;
            
            private global::System.Data.DataColumn columnFIValidityDate;
            
            private global::System.Data.DataColumn columnCountryID;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnFamilyDesc;
            
            private global::System.Data.DataColumn columnTechFamNo;
            
            private global::System.Data.DataColumn columnInspDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_RSMgmtDetails_Fno_ReportDataTable() {
                this.TableName = "STP_Select_RSMgmtDetails_Fno_Report";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STP_Select_RSMgmtDetails_Fno_ReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected STP_Select_RSMgmtDetails_Fno_ReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FNoColumn {
                get {
                    return this.columnFNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormulaNoColumn {
                get {
                    return this.columnFormulaNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BulkDescColumn {
                get {
                    return this.columnBulkDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RSIDColumn {
                get {
                    return this.columnRSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn WSIDColumn {
                get {
                    return this.columnWSID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValidityDateColumn {
                get {
                    return this.columnValidityDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FMIDColumn {
                get {
                    return this.columnFMID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MfgWoColumn {
                get {
                    return this.columnMfgWo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocIDColumn {
                get {
                    return this.columnLocID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocationColumn {
                get {
                    return this.columnLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IRIDColumn {
                get {
                    return this.columnIRID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIFormulaNoColumn {
                get {
                    return this.columnFIFormulaNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIMfgWoColumn {
                get {
                    return this.columnFIMfgWo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReceivingDateColumn {
                get {
                    return this.columnReceivingDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PFLotColumn {
                get {
                    return this.columnPFLot;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FIValidityDateColumn {
                get {
                    return this.columnFIValidityDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryIDColumn {
                get {
                    return this.columnCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FamilyDescColumn {
                get {
                    return this.columnFamilyDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TechFamNoColumn {
                get {
                    return this.columnTechFamNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InspDateColumn {
                get {
                    return this.columnInspDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_RSMgmtDetails_Fno_ReportRow this[int index] {
                get {
                    return ((STP_Select_RSMgmtDetails_Fno_ReportRow)(this.Rows[index]));
                }
            }
            
            public event STP_Select_RSMgmtDetails_Fno_ReportRowChangeEventHandler STP_Select_RSMgmtDetails_Fno_ReportRowChanging;
            
            public event STP_Select_RSMgmtDetails_Fno_ReportRowChangeEventHandler STP_Select_RSMgmtDetails_Fno_ReportRowChanged;
            
            public event STP_Select_RSMgmtDetails_Fno_ReportRowChangeEventHandler STP_Select_RSMgmtDetails_Fno_ReportRowDeleting;
            
            public event STP_Select_RSMgmtDetails_Fno_ReportRowChangeEventHandler STP_Select_RSMgmtDetails_Fno_ReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSTP_Select_RSMgmtDetails_Fno_ReportRow(STP_Select_RSMgmtDetails_Fno_ReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_RSMgmtDetails_Fno_ReportRow AddSTP_Select_RSMgmtDetails_Fno_ReportRow(string FormulaNo, string BulkDesc, System.DateTime ValidityDate, string MfgWo, string Location, string FIFormulaNo, string FIMfgWo, System.DateTime ReceivingDate, string PFLot, System.DateTime FIValidityDate, string Country, string FamilyDesc, System.DateTime InspDate) {
                STP_Select_RSMgmtDetails_Fno_ReportRow rowSTP_Select_RSMgmtDetails_Fno_ReportRow = ((STP_Select_RSMgmtDetails_Fno_ReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FormulaNo,
                        BulkDesc,
                        null,
                        null,
                        ValidityDate,
                        null,
                        MfgWo,
                        null,
                        Location,
                        null,
                        FIFormulaNo,
                        FIMfgWo,
                        ReceivingDate,
                        PFLot,
                        FIValidityDate,
                        null,
                        Country,
                        FamilyDesc,
                        null,
                        InspDate};
                rowSTP_Select_RSMgmtDetails_Fno_ReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTP_Select_RSMgmtDetails_Fno_ReportRow);
                return rowSTP_Select_RSMgmtDetails_Fno_ReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                STP_Select_RSMgmtDetails_Fno_ReportDataTable cln = ((STP_Select_RSMgmtDetails_Fno_ReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STP_Select_RSMgmtDetails_Fno_ReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFNo = base.Columns["FNo"];
                this.columnFormulaNo = base.Columns["FormulaNo"];
                this.columnBulkDesc = base.Columns["BulkDesc"];
                this.columnRSID = base.Columns["RSID"];
                this.columnWSID = base.Columns["WSID"];
                this.columnValidityDate = base.Columns["ValidityDate"];
                this.columnFMID = base.Columns["FMID"];
                this.columnMfgWo = base.Columns["MfgWo"];
                this.columnLocID = base.Columns["LocID"];
                this.columnLocation = base.Columns["Location"];
                this.columnIRID = base.Columns["IRID"];
                this.columnFIFormulaNo = base.Columns["FIFormulaNo"];
                this.columnFIMfgWo = base.Columns["FIMfgWo"];
                this.columnReceivingDate = base.Columns["ReceivingDate"];
                this.columnPFLot = base.Columns["PFLot"];
                this.columnFIValidityDate = base.Columns["FIValidityDate"];
                this.columnCountryID = base.Columns["CountryID"];
                this.columnCountry = base.Columns["Country"];
                this.columnFamilyDesc = base.Columns["FamilyDesc"];
                this.columnTechFamNo = base.Columns["TechFamNo"];
                this.columnInspDate = base.Columns["InspDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFNo = new global::System.Data.DataColumn("FNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFNo);
                this.columnFormulaNo = new global::System.Data.DataColumn("FormulaNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormulaNo);
                this.columnBulkDesc = new global::System.Data.DataColumn("BulkDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBulkDesc);
                this.columnRSID = new global::System.Data.DataColumn("RSID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRSID);
                this.columnWSID = new global::System.Data.DataColumn("WSID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWSID);
                this.columnValidityDate = new global::System.Data.DataColumn("ValidityDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidityDate);
                this.columnFMID = new global::System.Data.DataColumn("FMID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFMID);
                this.columnMfgWo = new global::System.Data.DataColumn("MfgWo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMfgWo);
                this.columnLocID = new global::System.Data.DataColumn("LocID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocID);
                this.columnLocation = new global::System.Data.DataColumn("Location", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation);
                this.columnIRID = new global::System.Data.DataColumn("IRID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIRID);
                this.columnFIFormulaNo = new global::System.Data.DataColumn("FIFormulaNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIFormulaNo);
                this.columnFIMfgWo = new global::System.Data.DataColumn("FIMfgWo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIMfgWo);
                this.columnReceivingDate = new global::System.Data.DataColumn("ReceivingDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceivingDate);
                this.columnPFLot = new global::System.Data.DataColumn("PFLot", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPFLot);
                this.columnFIValidityDate = new global::System.Data.DataColumn("FIValidityDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIValidityDate);
                this.columnCountryID = new global::System.Data.DataColumn("CountryID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryID);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnFamilyDesc = new global::System.Data.DataColumn("FamilyDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFamilyDesc);
                this.columnTechFamNo = new global::System.Data.DataColumn("TechFamNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechFamNo);
                this.columnInspDate = new global::System.Data.DataColumn("InspDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInspDate);
                this.columnFNo.AutoIncrement = true;
                this.columnFNo.AllowDBNull = false;
                this.columnFNo.ReadOnly = true;
                this.columnFormulaNo.AllowDBNull = false;
                this.columnFormulaNo.MaxLength = 200;
                this.columnBulkDesc.MaxLength = 250;
                this.columnRSID.AutoIncrement = true;
                this.columnRSID.AllowDBNull = false;
                this.columnRSID.ReadOnly = true;
                this.columnWSID.AutoIncrement = true;
                this.columnWSID.AllowDBNull = false;
                this.columnWSID.ReadOnly = true;
                this.columnFMID.AutoIncrement = true;
                this.columnFMID.AllowDBNull = false;
                this.columnFMID.ReadOnly = true;
                this.columnMfgWo.MaxLength = 200;
                this.columnLocID.AutoIncrement = true;
                this.columnLocID.AllowDBNull = false;
                this.columnLocID.ReadOnly = true;
                this.columnLocation.MaxLength = 50;
                this.columnIRID.AutoIncrement = true;
                this.columnIRID.AllowDBNull = false;
                this.columnIRID.ReadOnly = true;
                this.columnFIFormulaNo.MaxLength = 50;
                this.columnFIMfgWo.MaxLength = 50;
                this.columnPFLot.MaxLength = 50;
                this.columnCountryID.AutoIncrement = true;
                this.columnCountryID.AllowDBNull = false;
                this.columnCountryID.ReadOnly = true;
                this.columnCountry.MaxLength = 50;
                this.columnFamilyDesc.MaxLength = 250;
                this.columnTechFamNo.AutoIncrement = true;
                this.columnTechFamNo.AllowDBNull = false;
                this.columnTechFamNo.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_RSMgmtDetails_Fno_ReportRow NewSTP_Select_RSMgmtDetails_Fno_ReportRow() {
                return ((STP_Select_RSMgmtDetails_Fno_ReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STP_Select_RSMgmtDetails_Fno_ReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(STP_Select_RSMgmtDetails_Fno_ReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STP_Select_RSMgmtDetails_Fno_ReportRowChanged != null)) {
                    this.STP_Select_RSMgmtDetails_Fno_ReportRowChanged(this, new STP_Select_RSMgmtDetails_Fno_ReportRowChangeEvent(((STP_Select_RSMgmtDetails_Fno_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STP_Select_RSMgmtDetails_Fno_ReportRowChanging != null)) {
                    this.STP_Select_RSMgmtDetails_Fno_ReportRowChanging(this, new STP_Select_RSMgmtDetails_Fno_ReportRowChangeEvent(((STP_Select_RSMgmtDetails_Fno_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STP_Select_RSMgmtDetails_Fno_ReportRowDeleted != null)) {
                    this.STP_Select_RSMgmtDetails_Fno_ReportRowDeleted(this, new STP_Select_RSMgmtDetails_Fno_ReportRowChangeEvent(((STP_Select_RSMgmtDetails_Fno_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STP_Select_RSMgmtDetails_Fno_ReportRowDeleting != null)) {
                    this.STP_Select_RSMgmtDetails_Fno_ReportRowDeleting(this, new STP_Select_RSMgmtDetails_Fno_ReportRowChangeEvent(((STP_Select_RSMgmtDetails_Fno_ReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSTP_Select_RSMgmtDetails_Fno_ReportRow(STP_Select_RSMgmtDetails_Fno_ReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsFGRefSampleMgmt ds = new dsFGRefSampleMgmt();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STP_Select_RSMgmtDetails_Fno_ReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class STP_Select_RSMgmtDetails_Fno_ReportRow : global::System.Data.DataRow {
            
            private STP_Select_RSMgmtDetails_Fno_ReportDataTable tableSTP_Select_RSMgmtDetails_Fno_Report;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STP_Select_RSMgmtDetails_Fno_ReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTP_Select_RSMgmtDetails_Fno_Report = ((STP_Select_RSMgmtDetails_Fno_ReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FNo {
                get {
                    return ((long)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FNoColumn]));
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FormulaNo {
                get {
                    return ((string)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FormulaNoColumn]));
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FormulaNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BulkDesc {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.BulkDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BulkDesc\' in table \'STP_Select_RSMgmtDetails_Fno_Report\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.BulkDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long RSID {
                get {
                    return ((long)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.RSIDColumn]));
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.RSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long WSID {
                get {
                    return ((long)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.WSIDColumn]));
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.WSIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ValidityDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.ValidityDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ValidityDate\' in table \'STP_Select_RSMgmtDetails_Fno_Report" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.ValidityDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long FMID {
                get {
                    return ((long)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FMIDColumn]));
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FMIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MfgWo {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.MfgWoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MfgWo\' in table \'STP_Select_RSMgmtDetails_Fno_Report\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.MfgWoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long LocID {
                get {
                    return ((long)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.LocIDColumn]));
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.LocIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.LocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location\' in table \'STP_Select_RSMgmtDetails_Fno_Report\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.LocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long IRID {
                get {
                    return ((long)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.IRIDColumn]));
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.IRIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIFormulaNo {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIFormulaNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIFormulaNo\' in table \'STP_Select_RSMgmtDetails_Fno_Report\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIFormulaNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FIMfgWo {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIMfgWoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIMfgWo\' in table \'STP_Select_RSMgmtDetails_Fno_Report\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIMfgWoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime ReceivingDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.ReceivingDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReceivingDate\' in table \'STP_Select_RSMgmtDetails_Fno_Repor" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.ReceivingDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PFLot {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.PFLotColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PFLot\' in table \'STP_Select_RSMgmtDetails_Fno_Report\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.PFLotColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime FIValidityDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIValidityDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FIValidityDate\' in table \'STP_Select_RSMgmtDetails_Fno_Repo" +
                                "rt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIValidityDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CountryID {
                get {
                    return ((long)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.CountryIDColumn]));
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Country {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Country\' in table \'STP_Select_RSMgmtDetails_Fno_Report\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FamilyDesc {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FamilyDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FamilyDesc\' in table \'STP_Select_RSMgmtDetails_Fno_Report\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FamilyDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TechFamNo {
                get {
                    return ((int)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.TechFamNoColumn]));
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.TechFamNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime InspDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.InspDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InspDate\' in table \'STP_Select_RSMgmtDetails_Fno_Report\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.InspDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBulkDescNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.BulkDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBulkDescNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.BulkDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValidityDateNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.ValidityDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValidityDateNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.ValidityDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMfgWoNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.MfgWoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMfgWoNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.MfgWoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocationNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.LocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocationNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.LocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIFormulaNoNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIFormulaNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIFormulaNoNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIFormulaNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIMfgWoNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIMfgWoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIMfgWoNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIMfgWoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceivingDateNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.ReceivingDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceivingDateNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.ReceivingDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPFLotNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.PFLotColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPFLotNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.PFLotColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFIValidityDateNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIValidityDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFIValidityDateNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FIValidityDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountryNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountryNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFamilyDescNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.FamilyDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFamilyDescNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.FamilyDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInspDateNull() {
                return this.IsNull(this.tableSTP_Select_RSMgmtDetails_Fno_Report.InspDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInspDateNull() {
                this[this.tableSTP_Select_RSMgmtDetails_Fno_Report.InspDateColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class STP_Select_RSMgmtDetails_Fno_ReportRowChangeEvent : global::System.EventArgs {
            
            private STP_Select_RSMgmtDetails_Fno_ReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_RSMgmtDetails_Fno_ReportRowChangeEvent(STP_Select_RSMgmtDetails_Fno_ReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_RSMgmtDetails_Fno_ReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace QTMS.Reports.dsFGRefSampleMgmtTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STP_Select_RSMgmtDetails_Fno_ReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public STP_Select_RSMgmtDetails_Fno_ReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STP_Select_RSMgmtDetails_Fno_Report";
            tableMapping.ColumnMappings.Add("FNo", "FNo");
            tableMapping.ColumnMappings.Add("FormulaNo", "FormulaNo");
            tableMapping.ColumnMappings.Add("BulkDesc", "BulkDesc");
            tableMapping.ColumnMappings.Add("RSID", "RSID");
            tableMapping.ColumnMappings.Add("WSID", "WSID");
            tableMapping.ColumnMappings.Add("ValidityDate", "ValidityDate");
            tableMapping.ColumnMappings.Add("FMID", "FMID");
            tableMapping.ColumnMappings.Add("MfgWo", "MfgWo");
            tableMapping.ColumnMappings.Add("LocID", "LocID");
            tableMapping.ColumnMappings.Add("Location", "Location");
            tableMapping.ColumnMappings.Add("IRID", "IRID");
            tableMapping.ColumnMappings.Add("FIFormulaNo", "FIFormulaNo");
            tableMapping.ColumnMappings.Add("FIMfgWo", "FIMfgWo");
            tableMapping.ColumnMappings.Add("ReceivingDate", "ReceivingDate");
            tableMapping.ColumnMappings.Add("PFLot", "PFLot");
            tableMapping.ColumnMappings.Add("FIValidityDate", "FIValidityDate");
            tableMapping.ColumnMappings.Add("CountryID", "CountryID");
            tableMapping.ColumnMappings.Add("Country", "Country");
            tableMapping.ColumnMappings.Add("FamilyDesc", "FamilyDesc");
            tableMapping.ColumnMappings.Add("TechFamNo", "TechFamNo");
            tableMapping.ColumnMappings.Add("InspDate", "InspDate");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QTMS.Properties.Settings.Default.QTMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.STP_Select_RSMgmtDetails_Fno_Report";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FNo", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsFGRefSampleMgmt.STP_Select_RSMgmtDetails_Fno_ReportDataTable dataTable, global::System.Nullable<long> FNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(FNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsFGRefSampleMgmt.STP_Select_RSMgmtDetails_Fno_ReportDataTable GetData(global::System.Nullable<long> FNo) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((FNo.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(FNo.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            dsFGRefSampleMgmt.STP_Select_RSMgmtDetails_Fno_ReportDataTable dataTable = new dsFGRefSampleMgmt.STP_Select_RSMgmtDetails_Fno_ReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591