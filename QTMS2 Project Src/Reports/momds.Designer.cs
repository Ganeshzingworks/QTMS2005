//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QTMS.Reports {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("momds")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class momds : global::System.Data.DataSet {
        
        private STP_SELECT_tblMOMMaster_MOMIdDataTable tableSTP_SELECT_tblMOMMaster_MOMId;
        
        private STP_Select_tblQualityIssueDataTable tableSTP_Select_tblQualityIssue;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public momds() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected momds(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["STP_SELECT_tblMOMMaster_MOMId"] != null)) {
                    base.Tables.Add(new STP_SELECT_tblMOMMaster_MOMIdDataTable(ds.Tables["STP_SELECT_tblMOMMaster_MOMId"]));
                }
                if ((ds.Tables["STP_Select_tblQualityIssue"] != null)) {
                    base.Tables.Add(new STP_Select_tblQualityIssueDataTable(ds.Tables["STP_Select_tblQualityIssue"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STP_SELECT_tblMOMMaster_MOMIdDataTable STP_SELECT_tblMOMMaster_MOMId {
            get {
                return this.tableSTP_SELECT_tblMOMMaster_MOMId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public STP_Select_tblQualityIssueDataTable STP_Select_tblQualityIssue {
            get {
                return this.tableSTP_Select_tblQualityIssue;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            momds cln = ((momds)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["STP_SELECT_tblMOMMaster_MOMId"] != null)) {
                    base.Tables.Add(new STP_SELECT_tblMOMMaster_MOMIdDataTable(ds.Tables["STP_SELECT_tblMOMMaster_MOMId"]));
                }
                if ((ds.Tables["STP_Select_tblQualityIssue"] != null)) {
                    base.Tables.Add(new STP_Select_tblQualityIssueDataTable(ds.Tables["STP_Select_tblQualityIssue"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableSTP_SELECT_tblMOMMaster_MOMId = ((STP_SELECT_tblMOMMaster_MOMIdDataTable)(base.Tables["STP_SELECT_tblMOMMaster_MOMId"]));
            if ((initTable == true)) {
                if ((this.tableSTP_SELECT_tblMOMMaster_MOMId != null)) {
                    this.tableSTP_SELECT_tblMOMMaster_MOMId.InitVars();
                }
            }
            this.tableSTP_Select_tblQualityIssue = ((STP_Select_tblQualityIssueDataTable)(base.Tables["STP_Select_tblQualityIssue"]));
            if ((initTable == true)) {
                if ((this.tableSTP_Select_tblQualityIssue != null)) {
                    this.tableSTP_Select_tblQualityIssue.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "momds";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/momds.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSTP_SELECT_tblMOMMaster_MOMId = new STP_SELECT_tblMOMMaster_MOMIdDataTable();
            base.Tables.Add(this.tableSTP_SELECT_tblMOMMaster_MOMId);
            this.tableSTP_Select_tblQualityIssue = new STP_Select_tblQualityIssueDataTable();
            base.Tables.Add(this.tableSTP_Select_tblQualityIssue);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSTP_SELECT_tblMOMMaster_MOMId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeSTP_Select_tblQualityIssue() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            momds ds = new momds();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void STP_SELECT_tblMOMMaster_MOMIdRowChangeEventHandler(object sender, STP_SELECT_tblMOMMaster_MOMIdRowChangeEvent e);
        
        public delegate void STP_Select_tblQualityIssueRowChangeEventHandler(object sender, STP_Select_tblQualityIssueRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STP_SELECT_tblMOMMaster_MOMIdDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnMOMId;
            
            private global::System.Data.DataColumn columnMOMNo;
            
            private global::System.Data.DataColumn columnFormulaNo;
            
            private global::System.Data.DataColumn columnBatchSize;
            
            private global::System.Data.DataColumn columnProductDescription;
            
            private global::System.Data.DataColumn columnIQualityPreparedBy;
            
            private global::System.Data.DataColumn columnIQualityAcceptedBy;
            
            private global::System.Data.DataColumn columnIQualityPreparedByD;
            
            private global::System.Data.DataColumn columnIQualityAcceptedByD;
            
            private global::System.Data.DataColumn columnIQualityDate;
            
            private global::System.Data.DataColumn columnUPAcceptedBy;
            
            private global::System.Data.DataColumn columnUPAcceptedByD;
            
            private global::System.Data.DataColumn columnUPAcceptedByDate;
            
            private global::System.Data.DataColumn columnSHEAcceptedBy;
            
            private global::System.Data.DataColumn columnSHEAcceptedByD;
            
            private global::System.Data.DataColumn columnSHEAcceptedByDate;
            
            private global::System.Data.DataColumn columnReferenceDocument;
            
            private global::System.Data.DataColumn columnReasonforIssue;
            
            private global::System.Data.DataColumn columnISODocumentNo;
            
            private global::System.Data.DataColumn columnVesselId;
            
            private global::System.Data.DataColumn columnAnnexTankId;
            
            private global::System.Data.DataColumn columnFno;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_SELECT_tblMOMMaster_MOMIdDataTable() {
                this.TableName = "STP_SELECT_tblMOMMaster_MOMId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STP_SELECT_tblMOMMaster_MOMIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected STP_SELECT_tblMOMMaster_MOMIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOMIdColumn {
                get {
                    return this.columnMOMId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MOMNoColumn {
                get {
                    return this.columnMOMNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FormulaNoColumn {
                get {
                    return this.columnFormulaNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn BatchSizeColumn {
                get {
                    return this.columnBatchSize;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ProductDescriptionColumn {
                get {
                    return this.columnProductDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IQualityPreparedByColumn {
                get {
                    return this.columnIQualityPreparedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IQualityAcceptedByColumn {
                get {
                    return this.columnIQualityAcceptedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IQualityPreparedByDColumn {
                get {
                    return this.columnIQualityPreparedByD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IQualityAcceptedByDColumn {
                get {
                    return this.columnIQualityAcceptedByD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IQualityDateColumn {
                get {
                    return this.columnIQualityDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPAcceptedByColumn {
                get {
                    return this.columnUPAcceptedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPAcceptedByDColumn {
                get {
                    return this.columnUPAcceptedByD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UPAcceptedByDateColumn {
                get {
                    return this.columnUPAcceptedByDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHEAcceptedByColumn {
                get {
                    return this.columnSHEAcceptedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHEAcceptedByDColumn {
                get {
                    return this.columnSHEAcceptedByD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SHEAcceptedByDateColumn {
                get {
                    return this.columnSHEAcceptedByDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReferenceDocumentColumn {
                get {
                    return this.columnReferenceDocument;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ReasonforIssueColumn {
                get {
                    return this.columnReasonforIssue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ISODocumentNoColumn {
                get {
                    return this.columnISODocumentNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VesselIdColumn {
                get {
                    return this.columnVesselId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AnnexTankIdColumn {
                get {
                    return this.columnAnnexTankId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn FnoColumn {
                get {
                    return this.columnFno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_SELECT_tblMOMMaster_MOMIdRow this[int index] {
                get {
                    return ((STP_SELECT_tblMOMMaster_MOMIdRow)(this.Rows[index]));
                }
            }
            
            public event STP_SELECT_tblMOMMaster_MOMIdRowChangeEventHandler STP_SELECT_tblMOMMaster_MOMIdRowChanging;
            
            public event STP_SELECT_tblMOMMaster_MOMIdRowChangeEventHandler STP_SELECT_tblMOMMaster_MOMIdRowChanged;
            
            public event STP_SELECT_tblMOMMaster_MOMIdRowChangeEventHandler STP_SELECT_tblMOMMaster_MOMIdRowDeleting;
            
            public event STP_SELECT_tblMOMMaster_MOMIdRowChangeEventHandler STP_SELECT_tblMOMMaster_MOMIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSTP_SELECT_tblMOMMaster_MOMIdRow(STP_SELECT_tblMOMMaster_MOMIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_SELECT_tblMOMMaster_MOMIdRow AddSTP_SELECT_tblMOMMaster_MOMIdRow(
                        string MOMNo, 
                        string FormulaNo, 
                        string BatchSize, 
                        string ProductDescription, 
                        string IQualityPreparedBy, 
                        string IQualityAcceptedBy, 
                        string IQualityPreparedByD, 
                        string IQualityAcceptedByD, 
                        System.DateTime IQualityDate, 
                        string UPAcceptedBy, 
                        string UPAcceptedByD, 
                        System.DateTime UPAcceptedByDate, 
                        string SHEAcceptedBy, 
                        string SHEAcceptedByD, 
                        System.DateTime SHEAcceptedByDate, 
                        string ReferenceDocument, 
                        string ReasonforIssue, 
                        string ISODocumentNo, 
                        string VesselId, 
                        string AnnexTankId, 
                        int Fno) {
                STP_SELECT_tblMOMMaster_MOMIdRow rowSTP_SELECT_tblMOMMaster_MOMIdRow = ((STP_SELECT_tblMOMMaster_MOMIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        MOMNo,
                        FormulaNo,
                        BatchSize,
                        ProductDescription,
                        IQualityPreparedBy,
                        IQualityAcceptedBy,
                        IQualityPreparedByD,
                        IQualityAcceptedByD,
                        IQualityDate,
                        UPAcceptedBy,
                        UPAcceptedByD,
                        UPAcceptedByDate,
                        SHEAcceptedBy,
                        SHEAcceptedByD,
                        SHEAcceptedByDate,
                        ReferenceDocument,
                        ReasonforIssue,
                        ISODocumentNo,
                        VesselId,
                        AnnexTankId,
                        Fno};
                rowSTP_SELECT_tblMOMMaster_MOMIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTP_SELECT_tblMOMMaster_MOMIdRow);
                return rowSTP_SELECT_tblMOMMaster_MOMIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_SELECT_tblMOMMaster_MOMIdRow FindByMOMId(int MOMId) {
                return ((STP_SELECT_tblMOMMaster_MOMIdRow)(this.Rows.Find(new object[] {
                            MOMId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                STP_SELECT_tblMOMMaster_MOMIdDataTable cln = ((STP_SELECT_tblMOMMaster_MOMIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STP_SELECT_tblMOMMaster_MOMIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnMOMId = base.Columns["MOMId"];
                this.columnMOMNo = base.Columns["MOMNo"];
                this.columnFormulaNo = base.Columns["FormulaNo"];
                this.columnBatchSize = base.Columns["BatchSize"];
                this.columnProductDescription = base.Columns["ProductDescription"];
                this.columnIQualityPreparedBy = base.Columns["IQualityPreparedBy"];
                this.columnIQualityAcceptedBy = base.Columns["IQualityAcceptedBy"];
                this.columnIQualityPreparedByD = base.Columns["IQualityPreparedByD"];
                this.columnIQualityAcceptedByD = base.Columns["IQualityAcceptedByD"];
                this.columnIQualityDate = base.Columns["IQualityDate"];
                this.columnUPAcceptedBy = base.Columns["UPAcceptedBy"];
                this.columnUPAcceptedByD = base.Columns["UPAcceptedByD"];
                this.columnUPAcceptedByDate = base.Columns["UPAcceptedByDate"];
                this.columnSHEAcceptedBy = base.Columns["SHEAcceptedBy"];
                this.columnSHEAcceptedByD = base.Columns["SHEAcceptedByD"];
                this.columnSHEAcceptedByDate = base.Columns["SHEAcceptedByDate"];
                this.columnReferenceDocument = base.Columns["ReferenceDocument"];
                this.columnReasonforIssue = base.Columns["ReasonforIssue"];
                this.columnISODocumentNo = base.Columns["ISODocumentNo"];
                this.columnVesselId = base.Columns["VesselId"];
                this.columnAnnexTankId = base.Columns["AnnexTankId"];
                this.columnFno = base.Columns["Fno"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnMOMId = new global::System.Data.DataColumn("MOMId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOMId);
                this.columnMOMNo = new global::System.Data.DataColumn("MOMNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMOMNo);
                this.columnFormulaNo = new global::System.Data.DataColumn("FormulaNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormulaNo);
                this.columnBatchSize = new global::System.Data.DataColumn("BatchSize", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBatchSize);
                this.columnProductDescription = new global::System.Data.DataColumn("ProductDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProductDescription);
                this.columnIQualityPreparedBy = new global::System.Data.DataColumn("IQualityPreparedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIQualityPreparedBy);
                this.columnIQualityAcceptedBy = new global::System.Data.DataColumn("IQualityAcceptedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIQualityAcceptedBy);
                this.columnIQualityPreparedByD = new global::System.Data.DataColumn("IQualityPreparedByD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIQualityPreparedByD);
                this.columnIQualityAcceptedByD = new global::System.Data.DataColumn("IQualityAcceptedByD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIQualityAcceptedByD);
                this.columnIQualityDate = new global::System.Data.DataColumn("IQualityDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIQualityDate);
                this.columnUPAcceptedBy = new global::System.Data.DataColumn("UPAcceptedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPAcceptedBy);
                this.columnUPAcceptedByD = new global::System.Data.DataColumn("UPAcceptedByD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPAcceptedByD);
                this.columnUPAcceptedByDate = new global::System.Data.DataColumn("UPAcceptedByDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUPAcceptedByDate);
                this.columnSHEAcceptedBy = new global::System.Data.DataColumn("SHEAcceptedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHEAcceptedBy);
                this.columnSHEAcceptedByD = new global::System.Data.DataColumn("SHEAcceptedByD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHEAcceptedByD);
                this.columnSHEAcceptedByDate = new global::System.Data.DataColumn("SHEAcceptedByDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSHEAcceptedByDate);
                this.columnReferenceDocument = new global::System.Data.DataColumn("ReferenceDocument", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReferenceDocument);
                this.columnReasonforIssue = new global::System.Data.DataColumn("ReasonforIssue", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReasonforIssue);
                this.columnISODocumentNo = new global::System.Data.DataColumn("ISODocumentNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnISODocumentNo);
                this.columnVesselId = new global::System.Data.DataColumn("VesselId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVesselId);
                this.columnAnnexTankId = new global::System.Data.DataColumn("AnnexTankId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAnnexTankId);
                this.columnFno = new global::System.Data.DataColumn("Fno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFno);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMOMId}, true));
                this.columnMOMId.AutoIncrement = true;
                this.columnMOMId.AllowDBNull = false;
                this.columnMOMId.ReadOnly = true;
                this.columnMOMId.Unique = true;
                this.columnMOMNo.MaxLength = 150;
                this.columnFormulaNo.MaxLength = 150;
                this.columnBatchSize.MaxLength = 50;
                this.columnProductDescription.MaxLength = 200;
                this.columnIQualityPreparedBy.MaxLength = 100;
                this.columnIQualityAcceptedBy.MaxLength = 100;
                this.columnIQualityPreparedByD.MaxLength = 100;
                this.columnIQualityAcceptedByD.MaxLength = 100;
                this.columnUPAcceptedBy.MaxLength = 100;
                this.columnUPAcceptedByD.MaxLength = 50;
                this.columnSHEAcceptedBy.MaxLength = 100;
                this.columnSHEAcceptedByD.MaxLength = 50;
                this.columnReferenceDocument.MaxLength = 100;
                this.columnReasonforIssue.MaxLength = 100;
                this.columnISODocumentNo.MaxLength = 50;
                this.columnVesselId.MaxLength = 1000;
                this.columnAnnexTankId.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_SELECT_tblMOMMaster_MOMIdRow NewSTP_SELECT_tblMOMMaster_MOMIdRow() {
                return ((STP_SELECT_tblMOMMaster_MOMIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STP_SELECT_tblMOMMaster_MOMIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(STP_SELECT_tblMOMMaster_MOMIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STP_SELECT_tblMOMMaster_MOMIdRowChanged != null)) {
                    this.STP_SELECT_tblMOMMaster_MOMIdRowChanged(this, new STP_SELECT_tblMOMMaster_MOMIdRowChangeEvent(((STP_SELECT_tblMOMMaster_MOMIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STP_SELECT_tblMOMMaster_MOMIdRowChanging != null)) {
                    this.STP_SELECT_tblMOMMaster_MOMIdRowChanging(this, new STP_SELECT_tblMOMMaster_MOMIdRowChangeEvent(((STP_SELECT_tblMOMMaster_MOMIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STP_SELECT_tblMOMMaster_MOMIdRowDeleted != null)) {
                    this.STP_SELECT_tblMOMMaster_MOMIdRowDeleted(this, new STP_SELECT_tblMOMMaster_MOMIdRowChangeEvent(((STP_SELECT_tblMOMMaster_MOMIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STP_SELECT_tblMOMMaster_MOMIdRowDeleting != null)) {
                    this.STP_SELECT_tblMOMMaster_MOMIdRowDeleting(this, new STP_SELECT_tblMOMMaster_MOMIdRowChangeEvent(((STP_SELECT_tblMOMMaster_MOMIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSTP_SELECT_tblMOMMaster_MOMIdRow(STP_SELECT_tblMOMMaster_MOMIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                momds ds = new momds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STP_SELECT_tblMOMMaster_MOMIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class STP_Select_tblQualityIssueDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnQualityIssueId;
            
            private global::System.Data.DataColumn columnQualityIssueDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblQualityIssueDataTable() {
                this.TableName = "STP_Select_tblQualityIssue";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STP_Select_tblQualityIssueDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected STP_Select_tblQualityIssueDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualityIssueIdColumn {
                get {
                    return this.columnQualityIssueId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn QualityIssueDetailsColumn {
                get {
                    return this.columnQualityIssueDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblQualityIssueRow this[int index] {
                get {
                    return ((STP_Select_tblQualityIssueRow)(this.Rows[index]));
                }
            }
            
            public event STP_Select_tblQualityIssueRowChangeEventHandler STP_Select_tblQualityIssueRowChanging;
            
            public event STP_Select_tblQualityIssueRowChangeEventHandler STP_Select_tblQualityIssueRowChanged;
            
            public event STP_Select_tblQualityIssueRowChangeEventHandler STP_Select_tblQualityIssueRowDeleting;
            
            public event STP_Select_tblQualityIssueRowChangeEventHandler STP_Select_tblQualityIssueRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddSTP_Select_tblQualityIssueRow(STP_Select_tblQualityIssueRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblQualityIssueRow AddSTP_Select_tblQualityIssueRow(string QualityIssueDetails) {
                STP_Select_tblQualityIssueRow rowSTP_Select_tblQualityIssueRow = ((STP_Select_tblQualityIssueRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        QualityIssueDetails};
                rowSTP_Select_tblQualityIssueRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSTP_Select_tblQualityIssueRow);
                return rowSTP_Select_tblQualityIssueRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                STP_Select_tblQualityIssueDataTable cln = ((STP_Select_tblQualityIssueDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new STP_Select_tblQualityIssueDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnQualityIssueId = base.Columns["QualityIssueId"];
                this.columnQualityIssueDetails = base.Columns["QualityIssueDetails"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnQualityIssueId = new global::System.Data.DataColumn("QualityIssueId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualityIssueId);
                this.columnQualityIssueDetails = new global::System.Data.DataColumn("QualityIssueDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQualityIssueDetails);
                this.columnQualityIssueId.AutoIncrement = true;
                this.columnQualityIssueId.AllowDBNull = false;
                this.columnQualityIssueId.ReadOnly = true;
                this.columnQualityIssueDetails.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblQualityIssueRow NewSTP_Select_tblQualityIssueRow() {
                return ((STP_Select_tblQualityIssueRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new STP_Select_tblQualityIssueRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(STP_Select_tblQualityIssueRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.STP_Select_tblQualityIssueRowChanged != null)) {
                    this.STP_Select_tblQualityIssueRowChanged(this, new STP_Select_tblQualityIssueRowChangeEvent(((STP_Select_tblQualityIssueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.STP_Select_tblQualityIssueRowChanging != null)) {
                    this.STP_Select_tblQualityIssueRowChanging(this, new STP_Select_tblQualityIssueRowChangeEvent(((STP_Select_tblQualityIssueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.STP_Select_tblQualityIssueRowDeleted != null)) {
                    this.STP_Select_tblQualityIssueRowDeleted(this, new STP_Select_tblQualityIssueRowChangeEvent(((STP_Select_tblQualityIssueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.STP_Select_tblQualityIssueRowDeleting != null)) {
                    this.STP_Select_tblQualityIssueRowDeleting(this, new STP_Select_tblQualityIssueRowChangeEvent(((STP_Select_tblQualityIssueRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveSTP_Select_tblQualityIssueRow(STP_Select_tblQualityIssueRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                momds ds = new momds();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "STP_Select_tblQualityIssueDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class STP_SELECT_tblMOMMaster_MOMIdRow : global::System.Data.DataRow {
            
            private STP_SELECT_tblMOMMaster_MOMIdDataTable tableSTP_SELECT_tblMOMMaster_MOMId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STP_SELECT_tblMOMMaster_MOMIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTP_SELECT_tblMOMMaster_MOMId = ((STP_SELECT_tblMOMMaster_MOMIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int MOMId {
                get {
                    return ((int)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.MOMIdColumn]));
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.MOMIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string MOMNo {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.MOMNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MOMNo\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.MOMNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FormulaNo {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.FormulaNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormulaNo\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.FormulaNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string BatchSize {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.BatchSizeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BatchSize\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.BatchSizeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ProductDescription {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ProductDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProductDescription\' in table \'STP_SELECT_tblMOMMaster_MOMId" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ProductDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IQualityPreparedBy {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityPreparedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IQualityPreparedBy\' in table \'STP_SELECT_tblMOMMaster_MOMId" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityPreparedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IQualityAcceptedBy {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityAcceptedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IQualityAcceptedBy\' in table \'STP_SELECT_tblMOMMaster_MOMId" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityAcceptedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IQualityPreparedByD {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityPreparedByDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IQualityPreparedByD\' in table \'STP_SELECT_tblMOMMaster_MOMI" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityPreparedByDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IQualityAcceptedByD {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityAcceptedByDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IQualityAcceptedByD\' in table \'STP_SELECT_tblMOMMaster_MOMI" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityAcceptedByDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime IQualityDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IQualityDate\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPAcceptedBy {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPAcceptedBy\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UPAcceptedByD {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPAcceptedByD\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UPAcceptedByDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UPAcceptedByDate\' in table \'STP_SELECT_tblMOMMaster_MOMId\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHEAcceptedBy {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHEAcceptedBy\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SHEAcceptedByD {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHEAcceptedByD\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime SHEAcceptedByDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SHEAcceptedByDate\' in table \'STP_SELECT_tblMOMMaster_MOMId\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReferenceDocument {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ReferenceDocumentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReferenceDocument\' in table \'STP_SELECT_tblMOMMaster_MOMId\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ReferenceDocumentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ReasonforIssue {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ReasonforIssueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ReasonforIssue\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ReasonforIssueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ISODocumentNo {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ISODocumentNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ISODocumentNo\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ISODocumentNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VesselId {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.VesselIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VesselId\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.VesselIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AnnexTankId {
                get {
                    try {
                        return ((string)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.AnnexTankIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AnnexTankId\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.AnnexTankIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Fno {
                get {
                    try {
                        return ((int)(this[this.tableSTP_SELECT_tblMOMMaster_MOMId.FnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fno\' in table \'STP_SELECT_tblMOMMaster_MOMId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_SELECT_tblMOMMaster_MOMId.FnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMOMNoNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.MOMNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMOMNoNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.MOMNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFormulaNoNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.FormulaNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFormulaNoNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.FormulaNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBatchSizeNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.BatchSizeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBatchSizeNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.BatchSizeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProductDescriptionNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.ProductDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProductDescriptionNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ProductDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIQualityPreparedByNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityPreparedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIQualityPreparedByNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityPreparedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIQualityAcceptedByNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityAcceptedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIQualityAcceptedByNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityAcceptedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIQualityPreparedByDNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityPreparedByDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIQualityPreparedByDNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityPreparedByDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIQualityAcceptedByDNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityAcceptedByDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIQualityAcceptedByDNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityAcceptedByDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIQualityDateNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIQualityDateNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.IQualityDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPAcceptedByNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPAcceptedByNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPAcceptedByDNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPAcceptedByDNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUPAcceptedByDateNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUPAcceptedByDateNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.UPAcceptedByDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHEAcceptedByNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHEAcceptedByNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHEAcceptedByDNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHEAcceptedByDNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSHEAcceptedByDateNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSHEAcceptedByDateNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.SHEAcceptedByDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReferenceDocumentNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.ReferenceDocumentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReferenceDocumentNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ReferenceDocumentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReasonforIssueNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.ReasonforIssueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReasonforIssueNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ReasonforIssueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsISODocumentNoNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.ISODocumentNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetISODocumentNoNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.ISODocumentNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVesselIdNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.VesselIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVesselIdNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.VesselIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAnnexTankIdNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.AnnexTankIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAnnexTankIdNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.AnnexTankIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFnoNull() {
                return this.IsNull(this.tableSTP_SELECT_tblMOMMaster_MOMId.FnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFnoNull() {
                this[this.tableSTP_SELECT_tblMOMMaster_MOMId.FnoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class STP_Select_tblQualityIssueRow : global::System.Data.DataRow {
            
            private STP_Select_tblQualityIssueDataTable tableSTP_Select_tblQualityIssue;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal STP_Select_tblQualityIssueRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSTP_Select_tblQualityIssue = ((STP_Select_tblQualityIssueDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int QualityIssueId {
                get {
                    return ((int)(this[this.tableSTP_Select_tblQualityIssue.QualityIssueIdColumn]));
                }
                set {
                    this[this.tableSTP_Select_tblQualityIssue.QualityIssueIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string QualityIssueDetails {
                get {
                    try {
                        return ((string)(this[this.tableSTP_Select_tblQualityIssue.QualityIssueDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'QualityIssueDetails\' in table \'STP_Select_tblQualityIssue\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSTP_Select_tblQualityIssue.QualityIssueDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQualityIssueDetailsNull() {
                return this.IsNull(this.tableSTP_Select_tblQualityIssue.QualityIssueDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQualityIssueDetailsNull() {
                this[this.tableSTP_Select_tblQualityIssue.QualityIssueDetailsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class STP_SELECT_tblMOMMaster_MOMIdRowChangeEvent : global::System.EventArgs {
            
            private STP_SELECT_tblMOMMaster_MOMIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_SELECT_tblMOMMaster_MOMIdRowChangeEvent(STP_SELECT_tblMOMMaster_MOMIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_SELECT_tblMOMMaster_MOMIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class STP_Select_tblQualityIssueRowChangeEvent : global::System.EventArgs {
            
            private STP_Select_tblQualityIssueRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblQualityIssueRowChangeEvent(STP_Select_tblQualityIssueRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public STP_Select_tblQualityIssueRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace QTMS.Reports.momdsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STP_SELECT_tblMOMMaster_MOMIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public STP_SELECT_tblMOMMaster_MOMIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STP_SELECT_tblMOMMaster_MOMId";
            tableMapping.ColumnMappings.Add("MOMId", "MOMId");
            tableMapping.ColumnMappings.Add("MOMNo", "MOMNo");
            tableMapping.ColumnMappings.Add("FormulaNo", "FormulaNo");
            tableMapping.ColumnMappings.Add("BatchSize", "BatchSize");
            tableMapping.ColumnMappings.Add("ProductDescription", "ProductDescription");
            tableMapping.ColumnMappings.Add("IQualityPreparedBy", "IQualityPreparedBy");
            tableMapping.ColumnMappings.Add("IQualityAcceptedBy", "IQualityAcceptedBy");
            tableMapping.ColumnMappings.Add("IQualityPreparedByD", "IQualityPreparedByD");
            tableMapping.ColumnMappings.Add("IQualityAcceptedByD", "IQualityAcceptedByD");
            tableMapping.ColumnMappings.Add("IQualityDate", "IQualityDate");
            tableMapping.ColumnMappings.Add("UPAcceptedBy", "UPAcceptedBy");
            tableMapping.ColumnMappings.Add("UPAcceptedByD", "UPAcceptedByD");
            tableMapping.ColumnMappings.Add("UPAcceptedByDate", "UPAcceptedByDate");
            tableMapping.ColumnMappings.Add("SHEAcceptedBy", "SHEAcceptedBy");
            tableMapping.ColumnMappings.Add("SHEAcceptedByD", "SHEAcceptedByD");
            tableMapping.ColumnMappings.Add("SHEAcceptedByDate", "SHEAcceptedByDate");
            tableMapping.ColumnMappings.Add("ReferenceDocument", "ReferenceDocument");
            tableMapping.ColumnMappings.Add("ReasonforIssue", "ReasonforIssue");
            tableMapping.ColumnMappings.Add("ISODocumentNo", "ISODocumentNo");
            tableMapping.ColumnMappings.Add("VesselId", "VesselId");
            tableMapping.ColumnMappings.Add("AnnexTankId", "AnnexTankId");
            tableMapping.ColumnMappings.Add("Fno", "Fno");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QTMS.Properties.Settings.Default.QTMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.STP_SELECT_tblMOMMaster_MOMId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MOMId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(momds.STP_SELECT_tblMOMMaster_MOMIdDataTable dataTable, global::System.Nullable<int> MOMId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((MOMId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(MOMId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual momds.STP_SELECT_tblMOMMaster_MOMIdDataTable GetData(global::System.Nullable<int> MOMId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((MOMId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(MOMId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            momds.STP_SELECT_tblMOMMaster_MOMIdDataTable dataTable = new momds.STP_SELECT_tblMOMMaster_MOMIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class STP_Select_tblQualityIssueTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public STP_Select_tblQualityIssueTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "STP_Select_tblQualityIssue";
            tableMapping.ColumnMappings.Add("QualityIssueId", "QualityIssueId");
            tableMapping.ColumnMappings.Add("QualityIssueDetails", "QualityIssueDetails");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::QTMS.Properties.Settings.Default.QTMS2ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.STP_Select_tblQualityIssue";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(momds.STP_Select_tblQualityIssueDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual momds.STP_Select_tblQualityIssueDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            momds.STP_Select_tblQualityIssueDataTable dataTable = new momds.STP_Select_tblQualityIssueDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591